name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run tests
        run: |
          echo "Running tests..."
          # Add your actual test command here, e.g., npm test

  deploy:
    if: github.event_name == 'push'
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Fetch main branch
        run: git fetch origin main
        working-directory: /var/www/pondus_app

      - name: Get last commit on main
        id: last_commit
        run: |
          LAST_COMMIT=$(git rev-parse origin/main)
          echo "LAST_COMMIT=${LAST_COMMIT}" >> $GITHUB_ENV

      - name: Check for client changes
        id: client_changes
        run: |
          git diff --name-only ${{ env.LAST_COMMIT }}..HEAD -- client > changes.txt
          if [ -s changes.txt ]; then
            echo "client_changes_detected=true" >> $GITHUB_ENV
            echo "Detected client changes:"
            cat changes.txt
          else
            echo "client_changes_detected=false" >> $GITHUB_ENV
            echo "No client changes detected."
          fi

      - name: Check for server changes
        id: server_changes
        run: |
          git diff --name-only ${{ env.LAST_COMMIT }}..HEAD -- server > changes.txt
          if [ -s changes.txt ]; then
            echo "server_changes_detected=true" >> $GITHUB_ENV
            echo "Detected server changes:"
            cat changes.txt
          else
            echo "server_changes_detected=false" >> $GITHUB_ENV
            echo "No server changes detected."
          fi

      - name: Merge changes
        run: git merge origin/main
        working-directory: /var/www/pondus_app

      - name: Cache client dependencies
        if: ${{ env.client_changes_detected == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            /var/www/pondus_app/client/node_modules
            /root/.npm
          key: ${{ runner.os }}-node-client-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-client-

      - name: Install client dependencies
        if: ${{ env.client_changes_detected == 'true' }}
        run: npm ci
        working-directory: /var/www/pondus_app/client

      - name: Build client
        if: ${{ env.client_changes_detected == 'true' }}
        run: npm run build
        working-directory: /var/www/pondus_app/client

      - name: Cache server dependencies
        if: ${{ env.server_changes_detected == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            /var/www/pondus_app/server/node_modules
            /root/.npm
          key: ${{ runner.os }}-node-server-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-server-

      - name: Install server dependencies
        if: ${{ env.server_changes_detected == 'true' }}
        run: npm ci
        working-directory: /var/www/pondus_app/server

      - name: Restart server
        if: ${{ env.server_changes_detected == 'true' }}
        run: pm2 restart "Pondus Server"